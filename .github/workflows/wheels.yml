name: Wheels

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }} ${{ matrix.buildplat[2] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      matrix:
        buildplat:
        - [ubuntu-22.04, manylinux, x86_64]
        # - [ubuntu-22.04, manylinux, aarch64]
        - [macos-14, macosx, arm64]
        # - [macos-14, macosx, x86_64]
        # - [windows-2019, win, AMD64]
        python: ["cp38", "cp39", "cp310", "cp311", "cp312"]
      fail-fast: false

    env:
      IS_32_BIT: ${{ matrix.buildplat[2] == 'x86' }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.18.1
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BEFORE_ALL: bash .github/install_netcdf4.sh
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}*
          CIBW_ARCHS: ${{ matrix.buildplat[2] }}
          CIBW_ENVIRONMENT_MACOS: PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/opt/homebrew/lib/pkgconfig
          CIBW_ENVIRONMENT_PASS_LINUX: RUNNER_OS
          CIBW_TEST_COMMAND: python3 -c "import muGrid; print(muGrid.__version__); from _muGrid import FileIONetCDF"

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl
          name: ${{ matrix.python }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}

      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
        shell: bash

      - name: Deploy to PyPI
        if: steps.check-tag.outputs.match == 'true'
        run: |
          pip install twine
          twine upload wheelhouse/*.whl
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        shell: bash
