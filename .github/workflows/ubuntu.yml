name: Tests

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: "0 2 * * 5"  
jobs:
  tests:
    runs-on: ubuntu-22.04
    timeout-minutes: 45

    strategy:
      matrix:
        mpi: ['no', 'yes']
        compiler: ['gcc', 'clang']
        python-version: ['3.8', '3.9', '3.10', '3.11' , '3.12']
        numpy-version: ['<2.0.0']
        mpi4py-version: ['==3.1.6']
        exclude:
          - mpi: 'yes'
            compiler: 'clang'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          sudo apt-get update -qy
          if [ "${{ matrix.compiler }}" == "clang" ]; then
            sudo apt-get install -y clang
          fi
          python3 -m venv venv
          source venv/bin/activate
          python3 -m pip install --upgrade pip
          # Install numpy
          pip install -v "numpy${{ matrix.numpy-version }}"
          if [ "${{ matrix.mpi }}" == "yes" ]; then
            sudo apt-get install -y \
              ninja-build \
              libboost-test-dev \
              openmpi-bin \
              libopenmpi-dev \
              libpnetcdf-dev
            # Install mpi4py
            echo "Installing mpi4py${{ matrix.mpi4py-version }}"
            CC=mpicc python3 -m pip install -v \
              --no-binary mpi4py \
              "mpi4py${{ matrix.mpi4py-version }}"
          else
            sudo apt-get install -y \
              ninja-build \
              libboost-test-dev \
              libnetcdf-dev
          fi
          python3 -m pip install build meson
          python3 -m pip list

      - name: Compile with Meson
        run: |
          if [ "${{ matrix.compiler }}" == "clang" ]; then
            export CC=clang
            export CXX=clang++
          fi
          source venv/bin/activate
          meson setup builddir
          cd builddir
          meson compile

      - name: Run tests
        run: |
          source venv/bin/activate
          cd builddir
          meson test -v

      - name: Test installation of Python extension module
        run: |
          source venv/bin/activate
          python3 -m pip install .
